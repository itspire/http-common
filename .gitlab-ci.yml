#
# Copyright (c) 2016 - 2020 Itspire.
# This software is licensed under the BSD-3-Clause license. (see LICENSE.md for full license)
# All Right Reserved.
#
variables:
  source_dir: src/main/php
  build_dir: build
  vendor_dir: vendor
  bin_dir: $vendor_dir/bin
  PHP_IMAGE: $CI_REGISTRY/devops/docker-webservers/php-fpm-dev:latest
  COMPOSER_IMAGE: $CI_REGISTRY/itspire-devops/webservers/composer-ci:latest
  PHPCS_ARGS: --report=full --report-checkstyle=$build_dir/logs/checkstyle.xml --standard=PSR12 --extensions=php --ignore=bootstrap.php $source_dir
  PHPCPD_ARGS: --log-pmd $build_dir/logs/pmd-cpd.xml $source_dir
  PHPLOC_ARGS: --count-tests --log-xml=$build_dir/logs/phploc.xml --exclude=bootstrap.php $source_dir

default:
  cache:
    key: php7
    paths:
      - $build_dir
      - $vendor_dir
  tags:
    - docker-build

stages:
  - prepare
  - deps
  - analyse
  - test
  - artifacts

prepare:
  stage: prepare
  script:
    - mkdir -p $build_dir/logs
    - rm -rf $build_dir/logs/*

deps:
  stage: deps
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
  script:
    - docker run --rm -v $(pwd):/project -w /project -e DEV_UID=$(id -u) -e DEV_GID=$(id -g) $COMPOSER_IMAGE install --prefer-dist
  after_script:
    - docker logout $CI_REGISTRY

analyse:
  stage: analyse
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
  script:
    - docker run --rm -v $(pwd):/project -w /project -e DEV_UID=$(id -u) -e DEV_GID=$(id -g) $PHP_IMAGE -l $source_dir
    - docker run --rm -v $(pwd):/project -w /project -e DEV_UID=$(id -u) -e DEV_GID=$(id -g) $PHP_IMAGE $bin_dir/phpcs $PHPCS_ARGS
    - docker run --rm -v $(pwd):/project -w /project -e DEV_UID=$(id -u) -e DEV_GID=$(id -g) $PHP_IMAGE $bin_dir/phpcpd $PHPCPD_ARGS
    - docker run --rm -v $(pwd):/project -w /project -e DEV_UID=$(id -u) -e DEV_GID=$(id -g) $PHP_IMAGE $bin_dir/phploc $PHPLOC_ARGS
  after_script:
    - docker logout $CI_REGISTRY

artifacts:
  stage: artifacts
  script:
    - echo "Generating Artifact..."
  artifacts:
    paths:
      - $build_dir
